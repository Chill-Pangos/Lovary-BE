components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT authorization header. Use `Bearer <token>` format.

  schemas:
    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: >-
          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: "2020-05-12T16:18:04.793Z"

    AuthTokens:
      type: object
      properties:
        access:
          $ref: "#/components/schemas/Token"
        refresh:
          $ref: "#/components/schemas/Token"

    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string

    User:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        dateOfBirth:
          type: string
          format: date
          example: 1990-01-01
        partner:
          type: object
          properties:
            id:
              type: string
              example: 60f1b5b8c2a1e3f1d5e9b6c4
            name:
              type: string
              example: Jane Doe
            dateOfBirth:
              type: string
              format: date
              example: 1992-05-15
        startLoveDate:
          type: string
          format: date
          example: 2020-06-01
      required:
        - name

    Diary:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: objectId
              example: 60f1b5b8c2a1e3f1d5e9b6c4
            name:
              type: string
              example: John
        title:
          type: string
          example: example title
        content:
          type: string
          example: example content
        createdDate:
          type: string
          format: date
          example: 2020-06-01
      required:
        - id
        - name
        - title
        - content
        - createdDate

  responses:
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: "Email already taken"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            message: "Please authenticate"

    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: "Bad request"

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 500
            message: "Internal server error"
